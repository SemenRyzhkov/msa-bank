// Code generated by go-swagger; DO NOT EDIT.

package product_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"msa-bank-product/models"
)

// UpdateProductOKCode is the HTTP code returned for type UpdateProductOK
const UpdateProductOKCode int = 200

/*
UpdateProductOK successful operation

swagger:response updateProductOK
*/
type UpdateProductOK struct {

	/*
	  In: Body
	*/
	Payload *models.Product `json:"body,omitempty"`
}

// NewUpdateProductOK creates UpdateProductOK with default headers values
func NewUpdateProductOK() *UpdateProductOK {

	return &UpdateProductOK{}
}

// WithPayload adds the payload to the update product o k response
func (o *UpdateProductOK) WithPayload(payload *models.Product) *UpdateProductOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update product o k response
func (o *UpdateProductOK) SetPayload(payload *models.Product) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProductOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProductBadRequestCode is the HTTP code returned for type UpdateProductBadRequest
const UpdateProductBadRequestCode int = 400

/*
UpdateProductBadRequest Invalid ID supplied

swagger:response updateProductBadRequest
*/
type UpdateProductBadRequest struct {
}

// NewUpdateProductBadRequest creates UpdateProductBadRequest with default headers values
func NewUpdateProductBadRequest() *UpdateProductBadRequest {

	return &UpdateProductBadRequest{}
}

// WriteResponse to the client
func (o *UpdateProductBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// UpdateProductNotFoundCode is the HTTP code returned for type UpdateProductNotFound
const UpdateProductNotFoundCode int = 404

/*
UpdateProductNotFound Product not found

swagger:response updateProductNotFound
*/
type UpdateProductNotFound struct {
}

// NewUpdateProductNotFound creates UpdateProductNotFound with default headers values
func NewUpdateProductNotFound() *UpdateProductNotFound {

	return &UpdateProductNotFound{}
}

// WriteResponse to the client
func (o *UpdateProductNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// UpdateProductMethodNotAllowedCode is the HTTP code returned for type UpdateProductMethodNotAllowed
const UpdateProductMethodNotAllowedCode int = 405

/*
UpdateProductMethodNotAllowed Validation exception

swagger:response updateProductMethodNotAllowed
*/
type UpdateProductMethodNotAllowed struct {
}

// NewUpdateProductMethodNotAllowed creates UpdateProductMethodNotAllowed with default headers values
func NewUpdateProductMethodNotAllowed() *UpdateProductMethodNotAllowed {

	return &UpdateProductMethodNotAllowed{}
}

// WriteResponse to the client
func (o *UpdateProductMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

// UpdateProductInternalServerErrorCode is the HTTP code returned for type UpdateProductInternalServerError
const UpdateProductInternalServerErrorCode int = 500

/*
UpdateProductInternalServerError Internal server error

swagger:response updateProductInternalServerError
*/
type UpdateProductInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateProductInternalServerError creates UpdateProductInternalServerError with default headers values
func NewUpdateProductInternalServerError() *UpdateProductInternalServerError {

	return &UpdateProductInternalServerError{}
}

// WithPayload adds the payload to the update product internal server error response
func (o *UpdateProductInternalServerError) WithPayload(payload *models.Error) *UpdateProductInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update product internal server error response
func (o *UpdateProductInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProductInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
