swagger: "2.0"
info:
  description: "This is a sample server for Product."
  version: "1.0.0"
  title: "Swagger msa-bank-product-cs"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "msa-bank-product-cs.swagger.io"
basePath: "/v1"
tags:
  - name: "product-api"
    description: "Product Api"
schemes:
  - "http"
paths:
  /product:
    post:
      tags:
        - "product-api"
      summary: "Add a new product to the store"
      description: ""
      operationId: "addProduct"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Product object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        "201":
          description: "successful operation"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'            
    put:
      tags:
        - "product-api"
      summary: "Update an existing product"
      description: ""
      operationId: "updateProduct"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Product object that needs to be update in the store"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"
        "500":
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'            
    get:
      tags:
        - "product-api"
      summary: "Get all products from the store"
      description: ""
      operationId: "getProducts"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'            
  /product/{id}:
    get:
      tags:
        - "product-api"
      summary: "Get product from the store"
      description: ""
      operationId: "getProduct"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Id of product"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'            
    delete:
      tags:
        - "product-api"
      summary: "Delete product from the store"
      description: "Delete product"
      operationId: "deleteProduct"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Product object that needs to be deleted to the store"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'            
definitions:
  Product:
    type: "object"
    required:
      - name
    properties:
      clientId:
          type: "string"
          format: "uuid"
      id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
      description:
        type: "string"
  Error:
    title: Error
    type: "object"
    properties:
      errorMessage:
        type: "string"        
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"